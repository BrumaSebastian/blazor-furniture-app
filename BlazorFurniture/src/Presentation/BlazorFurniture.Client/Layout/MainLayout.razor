@inherits LayoutComponentBase
@inject IThemeService ThemeService
@implements IDisposable

<MudThemeProvider Theme="@theme" IsDarkMode="isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
	<MudAppBar Elevation="1" Class="d-flex flex-grow-1">
		<MudIconButton class="d-sm-flex d-md-none" Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />

		<MudContainer>
			<AuthorizeView>
				<Authorized>
					<MudText Typo="Typo.h5" Class="ml-3">Welcome @context.User.Identity?.Name </MudText>
				</Authorized>

				<NotAuthorized>
					<MudText Typo="Typo.h5" Class="ml-3">Welcome </MudText>
				</NotAuthorized>
			</AuthorizeView>
		</MudContainer>

		<MudContainer Class="d-none d-md-flex flex-row flex-grow-1">
			<NavMenu />
		</MudContainer>

		<MudContainer Class="d-flex flex-row-reverse">
			<AuthorizeView>
				<NotAuthorized>
					<MudNavMenu class="d-none d-md-flex align-center">
						<MudNavLink  Href="api/authentication/login" Icon="@Icons.Material.Filled.Logout" >
							<MudText>@CommonResource.button_login</MudText>
						</MudNavLink>
					</MudNavMenu>
					<MudIconButton Icon="@(DarkLightModeButtonIcon)" Color="Color.Inherit" OnClick="@DarkModeToggle" />
					<CultureSelector />
				</NotAuthorized>

				<Authorized>
					<MudMenu Color="Color.Primary" AriaLabel="Profile">
						<ActivatorContent>
							<MudAvatar Color="Color.Primary">
								@context.User.Identity?.Name
							</MudAvatar>
						</ActivatorContent>
						<ChildContent>
							<MudNavLink Match="NavLinkMatch.Prefix" Href="my-profile" Icon="@Icons.Material.Filled.AccountBox">
								<MudText class="d-none d-md-flex">@CommonResource.button_profile</MudText>
							</MudNavLink>
							<MudNavLink Href="api/authentication/logout" Icon="@Icons.Material.Filled.Login">
								<MudText class="d-none d-md-flex">@CommonResource.button_logout</MudText>
							</MudNavLink>
						</ChildContent>
					</MudMenu>
					<MudIconButton Icon="@(DarkLightModeButtonIcon)" Color="Color.Inherit" OnClick="@DarkModeToggle" />
					<CultureSelector />
				</Authorized>
			</AuthorizeView>
		</MudContainer>
		@* <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" /> *@
	</MudAppBar>

	<MudDrawer id="nav-drawer" Class="d-flex d-md-none" @bind-Open="drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
		<MudNavMenu>
			<NavMenu />
		</MudNavMenu>
	</MudDrawer>

	<MudMainContent Class="pt-20 px-4 mx-0">
		@Body
	</MudMainContent>
</MudLayout>


<div id="blazor-error-ui" data-nosnippet>
	An unhandled error has occurred.
	<a href="." class="reload">Reload</a>
	<span class="dismiss">🗙</span>
</div>

@code {
	private bool drawerOpen = false;
	private bool isDarkMode = true;
	private MudTheme? theme;

	protected override void OnInitialized()
	{
		theme = ThemeService.GetTheme(ThemeType.Default);
		isDarkMode = ThemeService.IsDarkMode;
		ThemeService.OnThemeChanged += OnThemeChanged;
	}

	private void OnThemeChanged()
	{
		isDarkMode = ThemeService.IsDarkMode;
		StateHasChanged();
	}

	private void DrawerToggle() => drawerOpen = !drawerOpen;
	private void DarkModeToggle() => ThemeService.ToggleDarkMode();

	public string DarkLightModeButtonIcon => isDarkMode switch
	{
		true => Icons.Material.Rounded.AutoMode,
		false => Icons.Material.Outlined.DarkMode,
	};

	public void Dispose()
	{
		ThemeService.OnThemeChanged -= OnThemeChanged;
	}
}

