@using BlazorFurniture.Client.Components
@inherits LayoutComponentBase

<MudThemeProvider Theme="@theme" IsDarkMode="isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
	<MudAppBar Elevation="1" Class="d-flex flex-grow-1">
		<MudIconButton class="d-sm-flex d-md-none" Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />

		<MudContainer>
			<AuthorizeView>
				<Authorized>
					<MudText Typo="Typo.h5" Class="ml-3">Welcome @context.User.Identity?.Name </MudText>
				</Authorized>

				<NotAuthorized>
					<MudText Typo="Typo.h5" Class="ml-3">Welcome </MudText>
				</NotAuthorized>
			</AuthorizeView>
		</MudContainer>

		<MudContainer Class="d-none d-md-flex flex-row flex-grow-1">
			<NavMenu />
		</MudContainer>

		<MudContainer Class="d-flex flex-row-reverse">
			<AuthorizeView>
				<NotAuthorized>
					<MudNavMenu class="d-none d-md-flex align-center">
						<MudNavLink  Href="api/authentication/login" Icon="@Icons.Material.Filled.Logout" >
							<MudText>@CommonResource.button_login</MudText>
						</MudNavLink>
					</MudNavMenu>
					<MudIconButton Icon="@(DarkLightModeButtonIcon)" Color="Color.Inherit" OnClick="@DarkModeToggle" />
					<CultureSelector />
				</NotAuthorized>

				<Authorized>
					<MudMenu Color="Color.Primary" AriaLabel="Profile">
						<ActivatorContent>
							<MudAvatar Color="Color.Primary">
								@context.User.Identity?.Name
							</MudAvatar>
						</ActivatorContent>
						<ChildContent>
							<MudNavLink Match="NavLinkMatch.Prefix" Href="my-profile" Icon="@Icons.Material.Filled.AccountBox">
								<MudText class="d-none d-md-flex">@CommonResource.button_profile</MudText>
							</MudNavLink>
							<MudNavLink Href="api/authentication/logout" Icon="@Icons.Material.Filled.Login">
								<MudText class="d-none d-md-flex">@CommonResource.button_logout</MudText>
							</MudNavLink>
						</ChildContent>
					</MudMenu>
					<MudIconButton Icon="@(DarkLightModeButtonIcon)" Color="Color.Inherit" OnClick="@DarkModeToggle" />
					<CultureSelector />
				</Authorized>
			</AuthorizeView>
		</MudContainer>
		@* <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" /> *@
	</MudAppBar>

	<MudDrawer id="nav-drawer" Class="d-flex d-md-none" @bind-Open="drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
		<MudNavMenu>
			<NavMenu />
		</MudNavMenu>
	</MudDrawer>

	<MudMainContent Class="pt-20 px-4 mx-0">
		@Body
	</MudMainContent>
</MudLayout>


<div id="blazor-error-ui" data-nosnippet>
	An unhandled error has occurred.
	<a href="." class="reload">Reload</a>
	<span class="dismiss">🗙</span>
</div>

@code {

	private bool drawerOpen = false;
	private bool isDarkMode = true;
	private MudTheme? theme = null;

	protected override void OnInitialized()
	{
		base.OnInitialized();

		theme = new()
		{
			PaletteLight = _lightPalette,
			PaletteDark = _darkPalette,
			LayoutProperties = new LayoutProperties()
		};
	}

	private void DrawerToggle()
	{
		drawerOpen = !drawerOpen;
	}

	private void DarkModeToggle()
	{
		isDarkMode = !isDarkMode;
	}

	private readonly PaletteLight _lightPalette = new()
	{
		Black = "#110e2d",
		AppbarText = "#424242",
		AppbarBackground = "rgba(255,255,255,1)",
		DrawerBackground = "#ffffff",
		GrayLight = "#e8e8e8",
		GrayLighter = "#f9f9f9",
	};

	private readonly PaletteDark _darkPalette = new()
	{
		Primary = "#7e6fff",
		Surface = "#1e1e2d",
		Background = "#1a1a27",
		BackgroundGray = "#151521",
		AppbarText = "#92929f",
		AppbarBackground = "rgba(26,26,39,1)",
		DrawerBackground = "#1a1a27",
		ActionDefault = "#74718e",
		ActionDisabled = "#9999994d",
		ActionDisabledBackground = "#605f6d4d",
		TextPrimary = "#b2b0bf",
		TextSecondary = "#92929f",
		TextDisabled = "#ffffff33",
		DrawerIcon = "#92929f",
		DrawerText = "#92929f",
		GrayLight = "#2a2833",
		GrayLighter = "#1e1e2d",
		Info = "#4a86ff",
		Success = "#3dcb6c",
		Warning = "#ffb545",
		Error = "#ff3f5f",
		LinesDefault = "#33323e",
		TableLines = "#33323e",
		Divider = "#292838",
		OverlayLight = "#1e1e2d80",
	};

	public string DarkLightModeButtonIcon => isDarkMode switch
	{
		true => Icons.Material.Rounded.AutoMode,
		false => Icons.Material.Outlined.DarkMode,
	};
}


