@using System.Globalization
@inject IJSRuntime JS
@inject NavigationManager Navigation

<MudMenu AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter" Dense=true MaxHeight="200" FullWidth=true>
	<ActivatorContent>
		<MudIconButton>
			<MudAvatar Size="Size.Small">
				<MudImage ObjectFit="ObjectFit.Cover" Src="@cultureDict[selectedCulture!].flag" />
			</MudAvatar>
		</MudIconButton>
	</ActivatorContent>
	<ChildContent>
		@foreach ((var culture, var value) in cultureDict)
		{
			<MudMenuItem OnClick="@(async () => await OnCultureChanged(culture))" Label="@value.name">
				<MudAvatar Size="Size.Small" Class="mr-2">
					<MudImage Src="@value.flag" ObjectFit="ObjectFit.Cover" Width="32" />
				</MudAvatar>
				<MudText Align="Align.Center" Inline=true Class="align-self-center">@value.name</MudText> 
			</MudMenuItem>
		}
	</ChildContent>
</MudMenu>

@code
{
	private readonly Dictionary<string, (string flag, string name)> cultureDict =
		new()
		{
			{ Cultures.ENGLISH, ("https://upload.wikimedia.org/wikipedia/commons/b/be/Flag_of_England.svg", CulturesResource.en) },
			{ Cultures.ROMANIAN, ("https://upload.wikimedia.org/wikipedia/commons/7/73/Flag_of_Romania.svg", CulturesResource.ro) }
		};

	private string? selectedCulture = CultureInfo.CurrentCulture.Name;

	private async Task OnCultureChanged(string culture)
	{
		Console.WriteLine("asdf " + culture);
		selectedCulture = culture;

		if (CultureInfo.CurrentCulture.Name != selectedCulture)
		{
			await JS.InvokeVoidAsync("blazorCulture.set", selectedCulture);
			Navigation.NavigateTo(Navigation.Uri, forceLoad: true);
		}
	}
}
