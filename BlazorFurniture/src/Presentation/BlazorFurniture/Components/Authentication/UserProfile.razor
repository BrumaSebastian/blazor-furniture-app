@page "/profile"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@attribute [Authorize]
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>User Profile</PageTitle>

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h4><i class="bi bi-person-circle"></i> User Profile</h4>
                </div>
                <div class="card-body">
                    <AuthorizeView>
                        <Authorized>
                            <div class="row">
                                <div class="col-md-6">
                                    <h6>Basic Information</h6>
                                    <table class="table table-sm">
                                        <tr>
                                            <td><strong>Name:</strong></td>
                                            <td>@GetClaim(context.User, ClaimTypes.Name)</td>
                                        </tr>
                                        <tr>
                                            <td><strong>Email:</strong></td>
                                            <td>@GetClaim(context.User, ClaimTypes.Email)</td>
                                        </tr>
                                        <tr>
                                            <td><strong>First Name:</strong></td>
                                            <td>@GetClaim(context.User, "first_name")</td>
                                        </tr>
                                        <tr>
                                            <td><strong>Last Name:</strong></td>
                                            <td>@GetClaim(context.User, "last_name")</td>
                                        </tr>
                                        <tr>
                                            <td><strong>Email Verified:</strong></td>
                                            <td>
                                                @if (GetClaim(context.User, "email_verified") == "true")
                                                {
                                                    <span class="badge bg-success">Verified</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-warning">Not Verified</span>
                                                }
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                                <div class="col-md-6">
                                    <h6>Roles & Permissions</h6>
                                    <div class="mb-3">
                                        <strong>Realm Roles:</strong><br>
                                        @foreach (var role in context.User.FindAll(ClaimTypes.Role))
                                        {
                                            <span class="badge bg-primary me-1">@role.Value</span>
                                        }
                                    </div>
                                    <div class="mb-3">
                                        <strong>Client Roles:</strong><br>
                                        @foreach (var role in context.User.FindAll("client_role"))
                                        {
                                            <span class="badge bg-secondary me-1">@role.Value</span>
                                        }
                                    </div>
                                </div>
                            </div>
                        </Authorized>
                    </AuthorizeView>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h6>All Claims (Debug)</h6>
                </div>
                <div class="card-body">
                    <AuthorizeView>
                        <Authorized>
                            <div style="max-height: 400px; overflow-y: auto;">
                                <table class="table table-sm">
                                    <thead>
                                        <tr>
                                            <th>Type</th>
                                            <th>Value</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var claim in context.User.Claims.OrderBy(c => c.Type))
                                        {
                                            <tr>
                                                <td><small><code>@claim.Type</code></small></td>
                                                <td><small>@claim.Value</small></td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </Authorized>
                    </AuthorizeView>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string GetClaim(ClaimsPrincipal user, string claimType)
    {
        return user.FindFirst(claimType)?.Value ?? "Not available";
    }
}